{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/middleware.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\n\r\nconst onlyAuthNotExist = [\"/sign-in\", \"/sign-up\", \"/forgot-password\"];\r\nconst privateRoutes = [\"/blogs\", \"/settings\", \"/product\", \"/cart\"];\r\n\r\nexport async function middleware(request) {\r\n  // const dispatch = useDispatch();\r\n  const { pathname } = request.nextUrl;\r\n  const accessToken = request.cookies.get(\"accessToken\")?.value;\r\n  // console.log(\"accessToken from  middleware...: \", accessToken);\r\n\r\n  const isPrivateRoute = privateRoutes.some((route) =>\r\n    pathname.startsWith(route)\r\n  );\r\n\r\n  const isAuthRestrictedRoute = onlyAuthNotExist.includes(pathname);\r\n\r\n  if (isPrivateRoute && !accessToken) {\r\n    return NextResponse.redirect(new URL(\"/\", request.url));\r\n  }\r\n\r\n  return NextResponse.next();\r\n}\r\n\r\nexport const config = {\r\n  matcher: [\"/((?!api|_next/static|_next/image|favicon.ico).*)\"],\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAEA,MAAM,mBAAmB;IAAC;IAAY;IAAY;CAAmB;AACrE,MAAM,gBAAgB;IAAC;IAAU;IAAa;IAAY;CAAQ;AAE3D,eAAe,WAAW,OAAO;IACtC,kCAAkC;IAClC,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IACpC,MAAM,cAAc,QAAQ,OAAO,CAAC,GAAG,CAAC,gBAAgB;IACxD,iEAAiE;IAEjE,MAAM,iBAAiB,cAAc,IAAI,CAAC,CAAC,QACzC,SAAS,UAAU,CAAC;IAGtB,MAAM,wBAAwB,iBAAiB,QAAQ,CAAC;IAExD,IAAI,kBAAkB,CAAC,aAAa;QAClC,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;IACvD;IAEA,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;KAAoD;AAChE"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}